//! METRICAL STRUCTURE
function MusikipediaMetricalStructure(t){"use strict";if(this.timeSignature={},"string"==typeof t){let e=!1;switch("s"===t.substr(-1)&&(e=!0,t=t.substr(0,t.length-1)),t){case"2/2":this.length=576,this.structure=[{pos:0,level:0},{pos:288,level:1}],this.tactusLevel=1,this.countingNoteLevel=1,this.quaverBeamLevel=1,this.timeSignature.beats=2,this.timeSignature.length=288;break;case"3/2":this.length=864,this.structure=[{pos:0,level:0},{pos:288,level:1},{pos:576,level:1}],this.tactusLevel=1,this.countingNoteLevel=1,this.quaverBeamLevel=1,this.timeSignature.beats=3,this.timeSignature.length=288;break;case"2/4":this.length=288,this.structure=[{pos:0,level:0},{pos:144,level:1}],this.tactusLevel=1,this.countingNoteLevel=1,this.quaverBeamLevel=1,this.timeSignature.beats=2,this.timeSignature.length=144;break;case"3/4":this.length=432,this.structure=[{pos:0,level:0},{pos:144,level:1},{pos:288,level:1}],this.tactusLevel=1,this.countingNoteLevel=1,this.quaverBeamLevel=1,this.timeSignature.beats=3,this.timeSignature.length=144;break;case"5/4":this.length=720,this.structure=[{pos:0,level:0},{pos:144,level:2},{pos:288,level:2},{pos:432,level:1},{pos:576,level:2}],this.tactusLevel=1,this.countingNoteLevel=1,this.quaverBeamLevel=1,this.timeSignature.beats=5,this.timeSignature.length=144;break;case"6/4":this.length=864,this.structure=[{pos:0,level:0},{pos:144,level:2},{pos:288,level:2},{pos:432,level:1},{pos:576,level:2},{pos:720,level:2}],this.tactusLevel=1,this.countingNoteLevel=1,this.quaverBeamLevel=1,this.timeSignature.beats=6,this.timeSignature.length=144;break;case"3/8":this.length=216,this.structure=[{pos:0,level:0},{pos:72,level:1},{pos:144,level:1}],this.tactusLevel=0,this.countingNoteLevel=1,this.quaverBeamLevel=0,this.timeSignature.beats=3,this.timeSignature.length=72;break;case"6/8":this.length=432,this.structure=[{pos:0,level:0},{pos:72,level:2},{pos:144,level:2},{pos:216,level:1},{pos:288,level:2},{pos:360,level:2}],this.tactusLevel=1,this.countingNoteLevel=2,this.quaverBeamLevel=1,this.timeSignature.beats=6,this.timeSignature.length=72;break;case"9/8":this.length=648,this.structure=[{pos:0,level:0},{pos:72,level:2},{pos:144,level:2},{pos:216,level:1},{pos:288,level:2},{pos:360,level:2},{pos:432,level:1},{pos:504,level:2},{pos:576,level:2}],this.tactusLevel=1,this.countingNoteLevel=2,this.quaverBeamLevel=1,this.timeSignature.beats=9,this.timeSignature.length=72;break;case"12/8":this.length=864,this.structure=[{pos:0,level:0},{pos:72,level:3},{pos:144,level:3},{pos:216,level:2},{pos:288,level:3},{pos:360,level:3},{pos:432,level:1},{pos:504,level:3},{pos:576,level:3},{pos:648,level:2},{pos:720,level:3},{pos:792,level:3}],this.tactusLevel=2,this.countingNoteLevel=3,this.quaverBeamLevel=2,this.timeSignature.beats=12,this.timeSignature.length=72;break;default:this.length=576,this.structure=[{pos:0,level:0},{pos:144,level:2},{pos:288,level:1},{pos:432,level:2}],this.tactusLevel=2,this.countingNoteLevel=2,this.quaverBeamLevel=2,this.timeSignature.beats=4,this.timeSignature.length=144}this.tempo=120,e&&(this.swingLevel=this.tactusLevel+1,this.swingRatio=2/3)}else{if(this.length=t.length,this.structure=t.structure,this.tactusLevel=void 0!==t.tactusLevel?t.tactusLevel:1,void 0===t.timeSignature)throw new Error("Creation of rhythm with metrical structure with no metre.");this.timeSignature=t.timeSignature,void 0!==t.swingLevel&&void 0!==t.swingRatio&&(this.swingLevel=t.swingLevel,this.swingRatio=t.swingRatio),void 0===t.tempo?this.tempo=120:this.tempo=t.tempo,this.countingNoteLevel=void 0!==t.countingNoteLevel?t.countingNoteLevel:this.tactusLevel,this.quaverBeamLevel=void 0!==t.quaverBeamLevel?t.quaverBeamLevel:this.tactusLevel}for(;this.longestDistanceBetweenPositions()>36;)this.addLevel()}
//! RHYTHM COMPONENT
function MusikipediaRhythmComponent(t){"use strict";if(t){if(void 0!==t.length)this.length=t.length;else{if(void 0===t.l)throw new Error("Creation of rhythm component with no length.");this.length=t.l}if(this.rest=void 0!==t.rest&&t.rest,this.barRest=void 0!==t.barRest&&t.barRest,this.tie=void 0!==t.tie&&t.tie,this.mark=void 0!==t.mark?t.mark:"normal",this.locked=void 0!==t.locked&&t.locked,this.components=[],void 0!==t.components&&t.components.length>0){let e=0;for(const i of t.components){const t=new MusikipediaRhythmComponent(i);this.components.push(t),e+=t.length}if(e!=this.length)throw new Error("Wrong length of triplet. Total length of components is "+e+", but length of the triplet is "+this.length)}void 0!==t.position&&(this.position=t.position),void 0!==t.tactusBeat&&(this.tactusBeat=t.tactusBeat),void 0!==t.barNumber&&(this.barNumber=t.barNumber)}else this.length=144,this.rest=!1,this.barRest=!1,this.tie=!1,this.mark="normal",this.locked=!1,this.components=[]}
//! BAR
function MusikipediaBar(t,e,i){"use strict";if(this.metricalStructure=void 0!==i?i:t.metricalStructure,this.barNumber=void 0!==e?e:t.barNumber,this.components=[],void 0!==t.components)for(const e of t.components){const t=new MusikipediaRhythmComponent(e);this.components.push(t)}else if(0===t.length)this.components.push(new MusikipediaRhythmComponent({length:this.metricalStructure.length,rest:!0,barRest:!0}));else for(const e of t)this.components.push(new MusikipediaRhythmComponent(e));1===this.components.length&&this.components[0].barRest&&(this.components[0].length=this.metricalStructure.length)}
//! RHYTHM
function MusikipediaRhythm(t){"use strict";if(void 0!==t.metricalStructure?this.metricalStructure=new MusikipediaMetricalStructure(t.metricalStructure):void 0!==t.metre?this.metricalStructure=new MusikipediaMetricalStructure(t.metre):this.metricalStructure=new MusikipediaMetricalStructure("4/4"),this.bars=[],void 0!==t.bars)for(let e=0;e<t.bars.length;e++){const i=new MusikipediaBar(t.bars[e],e,this.metricalStructure);this.bars.push(i)}else if(void 0!==t.components){let e=0,i=0,n=[];for(const s of t.components)n.push(new MusikipediaRhythmComponent(s)),e+s.length>=this.metricalStructure.length&&(this.bars.push(new MusikipediaBar({components:n},i,this.metricalStructure)),n=[],i++),e=(e+s.length)%this.metricalStructure.length}}MusikipediaMetricalStructure.prototype.longestDistanceBetweenPositions=function(){let t=0,e=0;for(let i=1;i<=this.structure.length;i++){const n=i<this.structure.length?this.structure[i].pos:this.length;t=Math.max(n-e,t),e=n}return t},MusikipediaMetricalStructure.prototype.lowestLevel=function(){return this.structure.reduce(((t,e)=>Math.max(t,e.level)),0)},MusikipediaMetricalStructure.prototype.highestLevel=function(t){let e,i=0;const n=(t%this.length+this.length)%this.length;do{e=this.structure.find((t=>t.pos===n)),void 0===e&&this.addLevel(),i++}while(void 0===e&&i<10);return void 0===e?null:e.level},MusikipediaMetricalStructure.prototype.addLevel=function(){const t=this.lowestLevel()+1;let e=[{pos:0,level:0}],i=0;for(let n=1;n<=this.structure.length;n++){const s=n<this.structure.length?this.structure[n].pos:this.length,o=Math.floor((s+i)/2);e.push({pos:o,level:t}),n<this.structure.length&&e.push(this.structure[n]),i=s}this.structure=e},MusikipediaMetricalStructure.prototype.beatsOfLevel=function(t){return this.structure.filter((e=>e.level<=t))},MusikipediaMetricalStructure.prototype.numberOfBeatsOfTactusLevel=function(){return this.structure.filter((t=>t.level<=this.tactusLevel)).length},MusikipediaMetricalStructure.prototype.positionsOfLevel=function(t){return this.structure.filter((e=>e.level<=t)).map((t=>parseInt(t.pos)))},MusikipediaMetricalStructure.prototype.beatOfPositionOnLevel=function(t,e){const i=this.positionsOfLevel(e),n=i.findIndex((e=>e>t));return n<0?i.length:n},MusikipediaMetricalStructure.prototype.positionsOfTactusLevel=function(){return this.structure.filter((t=>t.level<=this.tactusLevel)).map((t=>parseInt(t.pos)))},MusikipediaMetricalStructure.prototype.positionOfTactusBeat=function(t){const e=this.positionsOfTactusLevel();return t<1?0:t>e.length?this.length:e[t-1]},MusikipediaMetricalStructure.prototype.tactusBeatOfPosition=function(t){let e=0;for(const i of this.structure)if(i.level<=this.tactusLevel){if(!(t>=i.pos))break;e+=1}return e},MusikipediaMetricalStructure.prototype.isOnTactusBeat=function(t){let e=!1;for(const i of this.structure)if(i.level<=this.tactusLevel&&t===i.pos){e=!0;break}return e},MusikipediaMetricalStructure.prototype.countingNoteBeatOfPosition=function(t){let e=0;const i=void 0===this.countingNoteLevel?this.tactusLevel:this.countingNoteLevel;for(const n of this.structure)if(n.level<=i){if(!(t>=n.pos))break;e+=1}return e},MusikipediaMetricalStructure.prototype.quaverBeamBeatOfPosition=function(t){const e=void 0===this.quaverBeamLevel?this.tactusLevel:this.quaverBeamLevel;return this.beatOfPositionOnLevel(t,e)},MusikipediaMetricalStructure.prototype.extendsOverAHigherLevel=function(t,e){const i=this.highestLevel(t),n=(t%this.length+this.length)%this.length;let s=!1,o=0;for(;o<this.structure.length&&this.structure[o].pos<n;)o++;if(o>=this.structure.length)return!1;if(this.structure[o].pos!==n)return!0;for(;o<this.structure.length&&!s&&this.structure[o].pos<n+e;)this.structure[o].level<i&&(s=!0),o++;return s},MusikipediaMetricalStructure.prototype.continuesWithHigherLevel=function(t,e){const i=(t%this.length+this.length)%this.length,n=this.structure.findIndex((t=>t.pos>i));if(void 0===n)return!0;const s=this.structure.find((t=>t.pos===i+e));if(void 0===s)return!0;const o=s.level;let r=n;for(;r<this.structure.length&&this.structure[r].pos<i+e;){if(this.structure[r].level<o)return!1;r++}return!0},MusikipediaMetricalStructure.prototype.lengthText=function(){switch(this.timeSignature.length){case 576:return"1";case 288:return"2";case 144:return"4";case 72:return"8";case 36:return"16";default:return""}},MusikipediaMetricalStructure.prototype.isOnStandardPosition=function(t){const e=t.position,i=t.position+t.length,n=this.highestLevel(e),s=this.highestLevel(i),o=Math.max(n,s);let r=this.beatsOfLevel(o);r.push({pos:this.length});return r.findIndex((t=>t.pos===e))+1===r.findIndex((t=>t.pos===i))},MusikipediaMetricalStructure.prototype.isEqualTo=function(t){return this.length===t.length&&(this.tactusLevel===t.tactusLevel&&(this.quaverBeamLevel===t.quaverBeamLevel&&(this.timeSignature.beats===t.timeSignature.beats&&(this.timeSignature.length===t.timeSignature.length&&(this.tempo===t.tempo&&(this.swingLevel===t.swingLevel&&this.swingRatio===t.swingRatio))))))},MusikipediaMetricalStructure.prototype.visualPositionOfSoundPosition=function(t){if(void 0===this.swingLevel||void 0===this.swingRatio)return t;const e=this.positionsOfLevel(this.swingLevel-1);let i=0,n=this.length;for(const s of e){if(s>t){n=s;break}i=s}const s=t-i,o=n-i,r=o*this.swingRatio,h=.5*o;if(s<r){return s/r*h+i}return(s-r)/(o-r)*h+h+i},MusikipediaRhythmComponent.prototype.isSimpleNote=function(){return[1152,576,288,144,72,36,18,9].includes(this.length)},MusikipediaRhythmComponent.prototype.isDottedNote=function(){return[1728,864,432,216,108,54,27].includes(this.length)},MusikipediaRhythmComponent.prototype.isPartOfTriplet=function(){return[768,384,192,96,48,24,12,6,3].includes(this.length)},MusikipediaRhythmComponent.prototype.isTriplet=function(){return void 0!==this.components&&this.components.length>0},MusikipediaRhythmComponent.prototype.setPositionAndTactusBeat=function(t,e,i){this.position=t,this.tactusBeat=i.tactusBeatOfPosition(t),this.quaverBeamBeat=i.quaverBeamBeatOfPosition(t),this.barNumber=e;let n=t;for(const t of this.components)t.setPositionAndTactusBeat(n,e,i),n=(n+t.length)%i.length},MusikipediaRhythmComponent.prototype.startsWithARest=function(){return this.isTriplet()?this.components[0].rest:this.rest},MusikipediaRhythmComponent.prototype.endsWithARest=function(){return this.isTriplet()?this.components[this.components.length-1].rest:this.rest},MusikipediaRhythmComponent.prototype.isUnlocked=function(){let t=!this.locked;if(this.isTriplet())for(const e of this.components)t=t&&!e.locked;return t},MusikipediaRhythmComponent.prototype.setTie=function(t){if(this.tie=t,this.isTriplet())return this.components[this.components.length-1].tie=t},MusikipediaRhythmComponent.prototype.endsWithATie=function(){return this.isTriplet()?this.components[this.components.length-1].tie:this.tie},MusikipediaRhythmComponent.prototype.positionOfSound=function(t){let e=this.position;if(void 0!==t.swingLevel&&void 0!==t.swingRatio&&t.swingLevel>0&&t.highestLevel(this.position)===t.swingLevel){let i=t.positionsOfLevel(t.swingLevel);i.push(t.length);let n=0;for(;n<i.length&&i[n]!==this.position;)n++;i[n]===this.position&&n>0&&n+1<i.length&&(e=(i[n+1]-i[n-1])*t.swingRatio+i[n-1])}return Math.round(e)},MusikipediaRhythmComponent.prototype.isEqualTo=function(t){if(this.length!==t.length)return!1;if(this.rest!==t.rest)return!1;if(this.barRest!==t.barRest)return!1;if(this.tie!==t.tie)return!1;if(void 0===this.components&&(this.components=[]),void 0===t.components&&(t.components=[]),this.components.length!==t.components.length)return!1;for(let e=0;e<this.components.length;e++)if(!this.components[e].isEqualTo(t.components[e]))return!1;return!0},MusikipediaBar.prototype.setPositionAndTactusBeatForAllComponents=function(){let t=0;for(const e of this.components)e.setPositionAndTactusBeat(t,this.barNumber,this.metricalStructure),t=(t+e.length)%this.metricalStructure.length},MusikipediaBar.prototype.setTiedForAllComponents=function(t){for(const e of this.components)if(e.tied=t,0===e.components.length)t=e.tie;else for(const i of e.components)i.tied=t,t=i.tie;return t},MusikipediaBar.prototype.firstComponent=function(){return this.components[0]},MusikipediaBar.prototype.lastComponent=function(){return this.components[this.components.length-1]},MusikipediaBar.prototype.indexOfComponentAt=function(t){let e=0,i=0;for(i=0;i<this.components.length;i++){const n=this.components[i];if(e<=t&&t<e+n.length)return i;e+=n.length}return null},MusikipediaBar.prototype.componentStartingAt=function(t){let e=0;for(const i of this.components)if(i.isTriplet())for(const n of i.components){if(e===t)return n;e+=n.length}else{if(e===t)return i;e+=i.length}return null},MusikipediaBar.prototype.indexOfComponentStartingAt=function(t){let e=0,i=null;for(let n=0;n<this.components.length;n++){if(e===t){i=n;break}e+=this.components[n].length}return i},MusikipediaBar.prototype.arrayOfComponents=function(){let t=[];for(const e of this.components)if(e.isTriplet())for(const i of e.components)t.push(i);else t.push(e);return t},MusikipediaBar.prototype.componentsToFillUp=function(t,e,i){function n(t,e,i){const n=e[t];if(t<e.length-1){const s=e[t+1],o=new MusikipediaRhythmComponent(n);if(o.length+=s.length,(o.isSimpleNote()||o.isDottedNote())&&i.isOnStandardPosition(o))return n.length=o.length,n.tie=s.tie,e.splice(t+1,1),!0;if(t<e.length-2){const o=e[t+2];if(n.rest&&s.rest&&o.rest){const r=new MusikipediaRhythmComponent(n);if(r.length+=s.length+o.length,(r.isSimpleNote()||r.isDottedNote())&&i.isOnStandardPosition(r))return n.length=r.length,n.tie=o.tie,e.splice(t+1,2),!0}}}return!1}const s=this.metricalStructure.beatsOfLevel(Math.max(this.metricalStructure.highestLevel(t),this.metricalStructure.highestLevel(e)));let o=[];const r=s.findIndex((e=>e.pos===t));let h,l=s.findIndex((t=>t.pos===e));l<0&&(l=s.length);for(let t=r;t<l;t++)o.push(new MusikipediaRhythmComponent({length:(t+1<s.length?s[t+1].pos:this.metricalStructure.length)-s[t].pos,rest:i,tie:t+1<l&&!i,position:s[t].pos}));do{h=!1;let t=0;for(;t<o.length-1&&!h;)h=n(t,o,this.metricalStructure),t++}while(h);return o},MusikipediaBar.prototype.convertToBarRestIfEmpty=function(){const t=new MusikipediaRhythmComponent({length:this.metricalStructure.length,rest:!0,barRest:!0});if(t.isSimpleNote()||t.isDottedNote())1===this.components.length&&this.components[0].rest&&(this.components=[t]);else{let e=!0;if(this.setPositionAndTactusBeatForAllComponents(),this.components.length>0)for(const t of this.components)if(!t.rest||!this.metricalStructure.isOnStandardPosition(t)){e=!1;break}e&&(this.components=[t])}},MusikipediaBar.prototype.insertRegular=function(t){let e=this.indexOfComponentAt(t.position);if(e<0||e>=this.components.length)return;if(t.position>this.components[e].position){const i=this.componentsToFillUp(this.components[e].position,t.position,!0);i[0].startsWithARest()&&e>0&&this.components[e-1].setTie(!1),this.components[e].length-=t.position-this.components[e].position,this.components.splice(e,0,...i),e+=i.length}let i=this.components[e].length-t.length,n=(this.components[e].tie,new MusikipediaRhythmComponent(t));for(this.components.splice(e,1,n),t.startsWithARest()&&e>0&&this.components[e-1].setTie(!1);i<0;)i+=this.components[e+1].length,this.components.splice(e+1,1);if(i>0){const n=t.position+t.length;let s=this.componentsToFillUp(n,n+i,!0);for(bestIndex=e,indexOfNext=e+1,bestComponentsToBeInsertedAfter=s;indexOfNext<this.components.length&&this.components[indexOfNext].rest;){i+=this.components[indexOfNext].length;const t=this.componentsToFillUp(n,n+i,!0);t.length-(indexOfNext-e)<bestComponentsToBeInsertedAfter.length&&(bestIndex=indexOfNext,bestComponentsToBeInsertedAfter=t),indexOfNext++}this.components.splice(e+1,bestIndex-e,...bestComponentsToBeInsertedAfter)}return n},MusikipediaBar.prototype.insert=function(t){this.setPositionAndTactusBeatForAllComponents();const e=!function(t,e){const i=e.indexOfComponentAt(t.position);if(null!==i&&e.components[i].isTriplet()){const n=e.components[i],s=n.components.findIndex((e=>e.position===t.position));if(void 0!==s&&s>=0){const e=t.isPartOfTriplet()?t.length:t.length/3*2,i=3===n.components.length;if(n.components[s].length===t.length/3*2)return n.components[s].rest=t.rest,n.components[s].tie=t.tie,!0;if(i&&s<=1&&2*t.length/3==2*n.length/3)return n.components[s].length=e,n.components[s].rest=t.rest,n.components[s].tie=t.tie,n.components.splice(s+1,1),!0;if(!i&&e===n.components[s].length/2&&n.components[s].length===2*n.components[1-s].length){n.components[s].length=e,n.components[s].rest=t.rest,n.components[s].tie=t.tie;const i=new MusikipediaRhythmComponent(n.components[s]);return n.components.splice(s+1,0,i),!0}}}return!1}(t,this);e&&(t.isPartOfTriplet()&&(t=function(t){const e=new MusikipediaRhythmComponent(t);e.length=3*t.length,e.components=[];for(let i=0;i<3;i++)e.components.push(new MusikipediaRhythmComponent(t));return e}(t)),this.insertRegular(t),t.rest&&t.length===this.metricalStructure.length&&this.convertToBarRestIfEmpty())},MusikipediaBar.prototype.insertOk=function(t){const e=this.indexOfComponentAt(t.position);if(e<0||e>=this.components.length)return!1;if(this.components[e].locked)return!1;if(null!==e&&this.components[e].isTriplet()){const i=this.components[e],n=i.components.findIndex((e=>e.position===t.position));if(void 0!==n&&n>=0){const e=t.isPartOfTriplet()?t.length:t.length/3*2,s=3===i.components.length;if(i.components[n].length===e)return!i.locked&&!i.components[n].locked;if(s&&n<=1&&e===2*i.length/3)return!(i.locked||i.components[n].locked||i.components[n+1].locked);if(!s&&e===i.components[n].length/2&&i.components[n].length===2*i.components[1-n].length)return!i.locked&&!i.components[n].locked;if(n>0)return!1}}if(t.isPartOfTriplet()){if(t.position+3*t.length>this.metricalStructure.length)return!1}else if(t.position+t.length>this.metricalStructure.length)return!1;let i=t.isPartOfTriplet()?this.components[e].length-3*t.length:this.components[e].length-t.length,n=e+1;for(;n<this.components.length&&i<0;){if(!this.components[n].isUnlocked())return!1;i+=this.components[n].length,n++}return!0},MusikipediaBar.prototype.isEqualTo=function(t){if(this.components.length!==t.components.length)return!1;if(void 0!==this.barNumber&&void 0!==t.barNumber&&this.components.barNumber!==t.components.barNumber)return!1;for(let e=0;e<this.components.length;e++)if(!this.components[e].isEqualTo(t.components[e]))return!1;return!0},MusikipediaBar.prototype.improveNotation=function(t,e){function i(t,e,i){const n=e[i];if(n.rest){if(t.isOnStandardPosition(n))return!0}else{if(!t.extendsOverAHigherLevel(n.position,n.length))return!0;if(i>0&&i+3<e.length&&n.isSimpleNote()&&!t.extendsOverAHigherLevel(e[i-1].position,4*n.length)&&t.continuesWithHigherLevel(e[i-1].position,4*n.length)&&e[i-1].length===n.length/2&&e[i+1].length===n.length&&e[i+2].length===n.length&&e[i+3].length===n.length/2)return!0;if(i>1&&i+2<e.length&&n.isSimpleNote()&&!t.extendsOverAHigherLevel(e[i-2].position,4*n.length)&&t.continuesWithHigherLevel(e[i-2].position,4*n.length)&&e[i-2].length===n.length/2&&e[i-1].length===n.length&&e[i+1].length===n.length&&e[i+2].length===n.length/2)return!0;if(i>2&&i+1<e.length&&n.isSimpleNote()&&!t.extendsOverAHigherLevel(e[i-3].position,4*n.length)&&t.continuesWithHigherLevel(e[i-3].position,4*n.length)&&e[i-3].length===n.length/2&&e[i-2].length===n.length&&e[i-1].length===n.length&&e[i+1].length===n.length/2)return!0;if(i>0&&i+2<e.length&&n.isSimpleNote()&&!t.extendsOverAHigherLevel(e[i-1].position,3*n.length)&&t.continuesWithHigherLevel(e[i-1].position,3*n.length)&&e[i-1].length===n.length/2&&e[i+1].length===n.length&&e[i+2].length===n.length/2)return!0;if(i>1&&i+1<e.length&&n.isSimpleNote()&&!t.extendsOverAHigherLevel(e[i-2].position,3*n.length)&&t.continuesWithHigherLevel(e[i-2].position,3*n.length)&&e[i-2].length===n.length/2&&e[i-1].length===n.length&&e[i+1].length===n.length/2)return!0;if(i>0&&i+1<e.length&&n.isSimpleNote()&&!t.extendsOverAHigherLevel(e[i-1].position,2*n.length)&&t.continuesWithHigherLevel(e[i-1].position,2*n.length)&&e[i-1].length===n.length/2&&e[i+1].length===n.length/2)return!0;if(i>0&&i<e.length&&e[i-1].isSimpleNote()&&!t.extendsOverAHigherLevel(e[i-1].position,4*e[i-1].length)&&t.continuesWithHigherLevel(e[i-1].position,4*e[i-1].length)&&!n.rest&&3*e[i-1].length===n.length)return!0;if(i>0&&i+1<e.length&&e[i+1].isSimpleNote()&&!t.extendsOverAHigherLevel(e[i-1].position,4*e[i+1])&&t.continuesWithHigherLevel(e[i-1].position,4*e[i+1])&&e[i-1].length===n.length&&e[i+1].length===n.length/3*2)return!0;if(i>0&&i+1<e.length&&e[i+1].isSimpleNote()&&!t.extendsOverAHigherLevel(e[i-1].position,3*e[i+1])&&t.continuesWithHigherLevel(e[i-1].position,3*e[i+1])&&e[i-1].length===n.length&&e[i+1].length===n.length)return!0;if(i>1&&i<e.length&&e[i-2].isSimpleNote()&&!t.extendsOverAHigherLevel(e[i-2].position,8*e[i-2])&&t.continuesWithHigherLevel(e[i-2].position,8*e[i-2])&&6*e[i-2].length===n.length&&6*e[i-1].length===n.length)return!0}return!1}let n;this.improved=!1,this.wasInappropriate=!1;do{n=!1,this.setPositionAndTactusBeatForAllComponents();let t=0;for(;t<this.components.length&&!n;){const e=this.components[t];if(this.metricalStructure.extendsOverAHigherLevel(e.position,e.length))if(i(this.metricalStructure,this.components,t))t+=1;else{const i=this.componentsToFillUp(e.position,e.position+e.length,e.rest);i[i.length-1].tie=e.tie,this.components.splice(t,1,...i),this.improved=!0,this.wasInappropriate=!0,n=!0,t+=1}else t+=1}for(t=0;t<this.components.length-1&&!n;){const e=this.components[t],s=this.components[t+1],o=this.metricalStructure.tactusBeatOfPosition(e.position),r=this.metricalStructure.tactusBeatOfPosition(s.position),h=this.metricalStructure.highestLevel(e.position),l=this.metricalStructure.highestLevel(s.position),p=o===r;this.metricalStructure.countingNoteBeatOfPosition(e.position),this.metricalStructure.countingNoteBeatOfPosition(s.position);if(!(e.tie&&!s.rest||e.rest&&s.rest)||e.isTriplet()||s.isTriplet()){if(e.isTriplet()&&3===e.components.length&&(e.components[0].tie||e.components[0].rest)&&e.components[0].rest===e.components[1].rest){const t=new MusikipediaRhythmComponent(e.components[0]);t.length+=e.components[1].length,t.tie=e.components[1].tie;let i=e.components.slice();i.splice(0,2,t),e.components=i,this.improved=!0,n=!0}else if(e.isTriplet()&&3===e.components.length&&(e.components[1].tie||e.components[1].rest)&&e.components[1].rest===e.components[2].rest){const t=new MusikipediaRhythmComponent(e.components[1]);t.length+=e.components[2].length,t.tie=e.components[2].tie;let i=e.components.slice();i.splice(1,2,t),e.components=i,this.improved=!0,n=!0}else if(!e.rest&&s.rest&&0===e.components.length&&h<l&&p){const i=new MusikipediaRhythmComponent(e);if(i.length+=s.length,i.tie=s.tie,(i.isSimpleNote()||i.isDottedNote())&&(!this.metricalStructure.extendsOverAHigherLevel(i.position,i.length)||this.metricalStructure.extendsOverAHigherLevel(e.position,e.length))){let e=this.components.slice();e.splice(t,2,i),this.components=e,this.wasInappropriate=!0,this.improved=!0,n=!0}}}else{const o=new MusikipediaRhythmComponent(e);if(o.length+=s.length,o.tie=s.tie,o.isSimpleNote()||o.isDottedNote()){let r=this.components.slice();r.splice(t,2,o),i(this.metricalStructure,r,t)&&(this.components=r,this.improved=!0,e.rest&&s.rest&&e.length==s.length&&e.length==this.metricalStructure.timeSignature.length||e.tie&&e.length==s.length&&t<this.components.length-2&&2*this.components[t+1].length===e.length&&2*this.components[t+2].length===e.length&&!this.metricalStructure.extendsOverAHigherLevel(e.position,3*e.length)&&this.metricalStructure.continuesWithHigherLevel(e.position,3*e.length)||e.tie&&e.length==s.length&&t>=2&&2*this.components[t-2].length===e.length&&2*this.components[t-1].length===e.length&&!this.metricalStructure.extendsOverAHigherLevel(this.components[t-2].position,3*e.length)&&this.metricalStructure.continuesWithHigherLevel(this.components[t-2].position,3*e.length)||(p?this.wasInappropriate=!0:this.metricalStructure.extendsOverAHigherLevel(o.position,o.length)||(this.wasInappropriate=!0)),n=!0)}}t+=1}for(t=0;t<this.components.length-2&&!n;){const e=this.components[t],s=this.components[t+1],o=this.components[t+2];if(e.rest&&s.rest&&o.rest){const r=new MusikipediaRhythmComponent(e);if(r.length+=s.length+o.length,r.isSimpleNote()||r.isDottedNote()){let e=this.components.slice();e.splice(t,3,r),i(this.metricalStructure,e,t)&&(this.components=e,n=!0,this.improved=!0)}}t+=1}const e=this.arrayOfComponents();for(let t=0;t<e.length;t++)if(component=e[t],component.tie){let i;i=!(t+1>=e.length)&&!e[t+1].rest,i||(component.tie=!1,n=!0,this.improved=!0,this.wasInappropriate=!0)}for(t=0;t<this.components.length&&!n;){const e=this.components[t];if(e.isTriplet()&&(e.components[1].rest||e.components[0].tie)&&(e.components.length<=2||e.components[2].rest||e.components[1].tie)){const i=new MusikipediaRhythmComponent(e);i.components=[],i.rest=e.components[0].rest,i.tie=e.components[e.components.length-1].tie;let s=this.components.slice();s.splice(t,1,i),this.components=s,this.wasInappropriate=!0,this.improved=!0,n=!0}t++}for(t=0;t<this.components.length-1&&!n;){const e=this.components[t],i=this.components[t+1];if(e.isTriplet()&&2===e.components.length&&e.components[0].length==2*e.components[1].length&&i.length===e.length&&!this.metricalStructure.extendsOverAHigherLevel(e.position,2*e.length)&&this.metricalStructure.tactusBeatOfPosition(e.position)===this.metricalStructure.tactusBeatOfPosition(i.position))if(i.isTriplet()||!i.rest&&!e.components[1].tie){if(i.isTriplet()&&2===i.components.length&&2*i.components[0].length==i.components[1].length&&(i.components[0].rest||e.components[1].tie)){const s=new MusikipediaRhythmComponent({length:e.components[0].length,rest:e.components[1].rest,tie:i.components[0].tie}),o=new MusikipediaRhythmComponent({components:[e.components[0],s,i.components[1]],length:e.components[0].length+s.length+i.components[1].length,tie:i.components[1].tie});let r=this.components.slice();r.splice(t,2,o),this.components=r,this.wasInappropriate=!0,this.improved=!0,n=!0}}else{const s=new MusikipediaRhythmComponent({length:2*e.components[0].length,rest:e.components[1].rest,tie:i.tie}),o=new MusikipediaRhythmComponent({components:[e.components[0],s],length:e.components[0].length+s.length,tie:i.tie});let r=this.components.slice();r.splice(t,2,o),this.components=r,this.wasInappropriate=!0,this.improved=!0,n=!0}t++}for(t=1;t<this.components.length&&!n;){const e=this.components[t],i=this.components[t-1];if(e.isTriplet()&&2===e.components.length&&2*e.components[0].length==e.components[1].length&&i.length===e.length&&!this.metricalStructure.extendsOverAHigherLevel(i.position,2*e.length)&&this.metricalStructure.tactusBeatOfPosition(e.position)===this.metricalStructure.tactusBeatOfPosition(i.position)&&!i.isTriplet()&&(e.components[0].rest||i.tie)){const s=new MusikipediaRhythmComponent({length:4*e.components[0].length,rest:i.rest,tie:e.components[0].tie}),o=new MusikipediaRhythmComponent({components:[s,e.components[1]],length:s.length+e.components[1].length,tie:e.components[1].tie});let r=this.components.slice();r.splice(t-1,2,o),this.components=r,this.wasInappropriate=!0,this.improved=!0,n=!0}t++}}while(n);if(e){n=!0;let t=!0,e=0;for(;e<this.components.length&&t;)this.components[e].rest=!0,t=this.components[e].tie,this.components[e].tie=!1,e+=1}this.convertToBarRestIfEmpty()},MusikipediaRhythm.prototype.setPositionAndTactusBeatForAllComponents=function(){for(let t=0;t<this.bars.length;t++)this.bars[t].setPositionAndTactusBeatForAllComponents(t,this.metricalStructure)},MusikipediaRhythm.prototype.setTiedForAllComponents=function(){let t=!1;for(const e of this.bars)t=e.setTiedForAllComponents(t)},MusikipediaRhythm.prototype.length=function(){return this.bars.length*this.metricalStructure.length},MusikipediaRhythm.prototype.nextComponent=function(t,e){const i=this.bars[t];return e+1<i.components.length?i.components[e+1]:t+1<this.bars.length?this.bars[t+1].components[0]:null},MusikipediaRhythm.prototype.previousComponent=function(t,e){const i=this.bars[t];if(e>0)return i.components[e-1];if(t>0){const e=this.bars[t-1].components;return e[e.length-1]}return null},MusikipediaRhythm.prototype.delete=function(t,e,i){if(t>=0&&t<this.bars.length){const n=this.bars[t];if(e>=0&&e<n.components.length){const s=n.components[e];if(void 0===i){if(!s.rest){s.rest=!0,s.tie=!1,s.components=[];const i=this.previousComponent(t,e);i&&i.setTie(!1)}}else if(i>=0&&i<s.components.length){const n=s.components[i];if(!n.rest)if(n.rest=!0,n.tie=!1,i>0)s.components[i-1].setTie(!1);else{const i=this.previousComponent(t,e);i&&i.setTie(!1)}}n.convertToBarRestIfEmpty()}}},MusikipediaRhythm.prototype.insert=function(t){if(t.rest&&0===t.position){const e=this.previousComponent(t.barNumber,0);e&&e.setTie(!1)}this.bars[t.barNumber].insert(t)},MusikipediaRhythm.prototype.insertOk=function(t){return this.bars[t.barNumber].insertOk(t)},MusikipediaRhythm.prototype.componentStartingAt=function(t,e){return t+=Math.floor(e/this.metricalStructure.length),e-=Math.floor(e/this.metricalStructure.length)*this.metricalStructure.length,t<0||t>=this.bars.length?null:this.bars[t].componentStartingAt(e)},MusikipediaRhythm.prototype.indexOfComponentStartingAt=function(t,e){return t+=Math.floor(e/this.metricalStructure.length),e-=Math.floor(e/this.metricalStructure.length)*this.metricalStructure.length,t<0||t>=this.bars.length?null:this.bars[t].indexOfComponentStartingAt(e)},MusikipediaRhythm.prototype.durationOfComponentStartingAt=function(t,e){let i=0,n=this.bars[t].arrayOfComponents(),s=n.findIndex((t=>t.position===e));for(;s>=0;){const e=n[s];i+=e.length,e.tie?(s++,s>=n.length&&(t++,n=this.bars[t].arrayOfComponents(),s=0)):s=-1}return i},MusikipediaRhythm.prototype.greatestCommonLevelLength=function(){function t(e,i){return 0==e?i:t(i%e,e)}let e=this.metricalStructure.length;for(const i of this.bars){const n=i.arrayOfComponents();for(const i of n)e=t(e,i.positionOfSound(this.metricalStructure))}return e},MusikipediaRhythm.prototype.isEqualTo=function(t){if(!this.metricalStructure.isEqualTo(t.metricalStructure))return!1;if(this.bars.length!==t.bars.length)return!1;for(let e=0;e<this.bars.length;e++)if(!this.bars[e].isEqualTo(t.bars[e]))return!1;return!0},MusikipediaRhythm.prototype.emptyClone=function(){let t=[];for(let e=0;e<this.bars.length;e++){const i=new MusikipediaBar([new MusikipediaRhythmComponent({length:this.metricalStructure.length,rest:!0,barRest:!0})],e,this.metricalStructure);t.push(i)}return new MusikipediaRhythm({metricalStructure:this.metricalStructure,bars:t})},MusikipediaRhythm.prototype.tapPositions=function(){let t=[],e=!1;for(let i=0;i<this.bars.length;i++){const n=this.bars[i].arrayOfComponents();for(const i of n){if(!e&&!i.rest&&!i.barRest){let e=i.positionOfSound(this.metricalStructure);e+=this.metricalStructure.length*i.barNumber,t.push(e)}e=i.endsWithATie()}}return t},MusikipediaRhythm.prototype.tapsAtTheSamePositions=function(t){if(!this.metricalStructure.isEqualTo(t.metricalStructure))return!1;if(this.bars.length!==t.bars.length)return!1;const e=this.tapPositions(),i=t.tapPositions();return e.length===i.length&&e.every(((t,e)=>t===i[e]))},MusikipediaRhythm.prototype.improveNotation=function(){this.improved=!1,this.wasInappropriate=!1;let t=!1;for(let e=0;e<this.bars.length;e++){const i=this.bars[e];let n=!(e+1>=this.bars.length)&&!this.bars[e+1].lastComponent().rest;const s=i.lastComponent().tie;i.improveNotation(n,t),i.improved&&(this.improved=!0),i.wasInappropriate&&(this.wasInappropriate=!0),t=s}},MusikipediaRhythm.prototype.numberOfSounds=function(){let t=0,e=!1;for(const i of this.bars){const n=i.arrayOfComponents();for(const i of n)e||i.rest||i.barRest||t++,e=i.tie&&!i.rest}return t},MusikipediaRhythm.prototype.exists=function(t){const e=this.componentStartingAt(t.barNumber,t.position);return null!==e&&(e.length===t.length&&e.rest===t.rest&&e.barRest===t.barRest&&e.tie===t.tie)};